{"version":3,"sources":["components/Formulario.js","components/Cita.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","crearCita","useState","mascota","propietario","fecha","hora","sintomas","cita","setCita","actualizarState","e","target","name","value","onSubmit","preventDefault","trim","id","uuidv4","Swal","fire","icon","title","type","className","placeholder","onChange","Cita","eliminarCita","citas","onClick","App","citasIniciales","JSON","parse","localStorage","getItem","setCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","console","log","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eea6c26a.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nexport const Formulario = ({ crearCita }) => {\n  //Crear state de citas\n\n  const [cita, setCita] = useState({\n    mascota: \"\",\n    propietario: \"\",\n    fecha: \"\",\n    hora: \"\",\n    sintomas: \"\",\n  });\n\n  const actualizarState = (e) => {\n    setCita({\n      ...cita,\n      [e.target.name]: e.target.value,\n    });\n  };\n  //Extraer los valores\n\n  const { mascota, propietario, fecha, hora, sintomas } = cita;\n\n  const submitCita = (e) => {\n    e.preventDefault();\n    //Validar\n    if (\n      mascota.trim() === \"\" ||\n      propietario.trim() === \"\" ||\n      fecha.trim() === \"\" ||\n      hora.trim() === \"\" ||\n      sintomas.trim() === \"\"\n    ) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Todos los campos son requeridos.\",\n      });\n\n      return;\n    }\n\n    //Asignar id\n    cita.id = uuidv4();\n    //Crear la cita\n    crearCita(cita);\n\n    //Reiniciar el form\n    setCita({\n      mascota: \"\",\n      propietario: \"\",\n      fecha: \"\",\n      hora: \"\",\n      sintomas: \"\",\n    });\n  };\n\n  return (\n    <Fragment>\n      <h2> Crear Cita</h2>\n\n      <form onSubmit={submitCita}>\n        <label>Nombre Mascota</label>\n        <input\n          type=\"text\"\n          name=\"mascota\"\n          className=\"u-full-width\"\n          placeholder=\"Nombre Mascota\"\n          onChange={actualizarState}\n          value={mascota}\n        />\n        <label>Nombre del dueño</label>\n\n        <input\n          type=\"text\"\n          name=\"propietario\"\n          className=\"u-full-width\"\n          placeholder=\"Nombre Dueño de la mascota\"\n          onChange={actualizarState}\n          value={propietario}\n        />\n        <label>Fecha</label>\n        <input\n          type=\"date\"\n          name=\"fecha\"\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={fecha}\n        />\n\n        <label>Hora</label>\n\n        <input\n          type=\"time\"\n          name=\"hora\"\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={hora}\n        />\n\n        <label>Síntomas</label>\n\n        <textarea\n          className=\"u-full-width\"\n          name=\"sintomas\"\n          onChange={actualizarState}\n          value={sintomas}\n        ></textarea>\n\n        <button type=\"submit\" className=\"u-full-width button-primary\">\n          Agregar Citas\n        </button>\n      </form>\n    </Fragment>\n  );\n};\n\nFormulario.propTypes = {\n  crearCita: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Cita = ({ cita, eliminarCita, citas }) => {\n  return (\n    <div className=\"cita\">\n      <p>\n        Mascota: <span>{cita.mascota}</span>\n      </p>\n      <p>\n        Dueño: <span>{cita.propietario}</span>\n      </p>\n      <p>\n        Fecha: <span>{cita.fecha}</span>\n      </p>\n      <p>\n        Hora: <span>{cita.hora}</span>\n      </p>\n      <p>\n        Sintomas: <span>{cita.sintomas}</span>\n      </p>\n\n      <button\n        className=\"button eliminar u-full-width\"\n        onClick={() => eliminarCita(cita.id)}\n      >\n        Eliminar &times;\n      </button>\n    </div>\n  );\n};\n\nCita.propTypes = {\n  cita: PropTypes.object.isRequired,\n  eliminarCita: PropTypes.func.isRequired,\n};\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Formulario } from \"./components/Formulario\";\nimport { Cita } from \"./components/Cita\";\n\nfunction App() {\n  //Citas en local storage\n  let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n\n  if (!citasIniciales) {\n    citasIniciales = [];\n  }\n  //Arreglo de citas\n  const [citas, setCitas] = useState(citasIniciales);\n\n  //useEffect para realiar ciertas operaciones cuando el state cambia\n  useEffect(() => {\n    localStorage.setItem(\"citas\", JSON.stringify(citas));\n  }, [citas, citasIniciales]);\n\n  //Fucion para tomar las citas actuales y agregue la nueva\n\n  const crearCita = (cita) => {\n    setCitas([...citas, cita]);\n  };\n\n  //Eliminar cita\n  const eliminarCita = (id) => {\n    const nuevasCitas = citas.filter((cita) => cita.id !== id);\n    setCitas(nuevasCitas);\n  };\n\n  //Mensaje condicional\n  const titulo = citas.length === 0 ? \"No hay citas\" : \"Administra tus citas\";\n\n  console.log(citas);\n\n  return (\n    <Fragment>\n      <h1>Administrador de Pacientes</h1>;\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario crearCita={crearCita} />\n          </div>\n\n          <div className=\"one-half column\">\n            <h2>{titulo}</h2>\n\n            {citas.map((cita) => (\n              <Cita\n                key={cita.id}\n                cita={cita}\n                eliminarCita={eliminarCita}\n                citas={citas}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}